package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"main/graph/model"
)

// FindASimplePostByID is the resolver for the findASimplePostByID field.
func (r *entityResolver) FindASimplePostByID(ctx context.Context, id string) (*model.ASimplePost, error) {
	return &model.ASimplePost{ID: id}, nil
}

// FindIdentityByID is the resolver for the findIdentityByID field.
func (r *entityResolver) FindIdentityByID(ctx context.Context, id string) (*model.Identity, error) {
	return &model.Identity{ID: id}, nil
}

// FindUnavailableUserByID is the resolver for the findUnavailableUserByID field.
func (r *entityResolver) FindUnavailableUserByID(ctx context.Context, id string) (*model.UnavailableUser, error) {
	return &model.UnavailableUser{ID: id}, nil
}

// FindUserByID is the resolver for the findUserByID field.
func (r *entityResolver) FindUserByID(ctx context.Context, id string) (*model.User, error) {
	return &model.User{ID: id}, nil
}

// Entity returns EntityResolver implementation.
func (r *Resolver) Entity() EntityResolver { return &entityResolver{r} }

type entityResolver struct{ *Resolver }
